server {
    listen 80;
    server_name coze.ireborn.com.cn;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name coze.ireborn.com.cn;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Health check endpoint
    location /health {
        root /usr/share/nginx/html;
        try_files /health.html =404;
    }

    # Root location
    location / {
        root /usr/share/nginx/html/coze-js-web;
        try_files $uri $uri/ /index.html;
    }

    # Coze JS Web
    location /coze-js-web/ {
        alias /usr/share/nginx/html/coze-js-web/;
        try_files $uri $uri/ /coze-js-web/index.html;
    }

    # Realtime Console
    location /realtime-console/ {
        alias /usr/share/nginx/html/realtime-console/;
        try_files $uri $uri/ /realtime-console/index.html;
    }

    # Realtime Quickstart React
    location /realtime-quickstart-react/ {
        alias /usr/share/nginx/html/realtime-quickstart-react/;
        try_files $uri $uri/ /realtime-quickstart-react/index.html;
    }

    # Realtime Quickstart Vue
    location /realtime-quickstart-vue/ {
        alias /usr/share/nginx/html/realtime-quickstart-vue/;
        try_files $uri $uri/ /realtime-quickstart-vue/index.html;
    }

    # Realtime Call Up
    location /realtime-call-up/ {
        alias /usr/share/nginx/html/realtime-call-up/;
        try_files $uri $uri/ /realtime-call-up/index.html;
    }

    # Realtime WebSocket
    location /realtime-websocket/ {
        alias /usr/share/nginx/html/realtime-websocket/;
        try_files $uri $uri/ /realtime-websocket/index.html;
    }

    # Simult Extension
    location /simult-extension/ {
        alias /usr/share/nginx/html/simult-extension/;
        try_files $uri $uri/ /simult-extension/index.html;
    }

    # OAuth Server - Web OAuth
    location /oauth/web/ {
        proxy_pass http://localhost:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # OAuth Server - PKCE OAuth
    location /oauth/pkce/ {
        proxy_pass http://localhost:3001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # OAuth Server - JWT OAuth
    location /oauth/jwt/ {
        proxy_pass http://localhost:3002/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # OAuth Server - Device OAuth
    location /oauth/device/ {
        proxy_pass http://localhost:3003/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket support for realtime features
    location /ws {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}